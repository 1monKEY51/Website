export const projects = [
  {
    title: 'SECURITY CODE PROJECTS',
    description: "Homemade offensive security toolkit using Python and C# including : a Port Scanner & Vulnerability Checker, Packet capturer, Brute-Force application and Keylogger.",  
      image: '/images/OSCP.jpg',
      tags: ['Python', 'C#'],
    source: 'https://github.com/1monKEY51/Offensive-Security-Code-Projects',
    visit: 'https://github.com/1monKEY51/Offensive-Security-Code-Projects',
    id: 0,
  },
  {
    title: 'SERVERLESS AND IAC',
    description:"Provision, build & deploy a serverless applications on AWS with Cloudformation and Terraform. Serverless Architecture is a way to build & run applications, and services without having to manage infrastructure",
    image: '/images/SAIC.jpg',
    tags: ['YAML', 'Cloudformation','Terraform'],
    source: 'https://github.com/1monKEY51/Serverless-IAC',
    visit: 'https://github.com/1monKEY51/Serverless-IAC',
    id: 1,
  },
  {
    title: 'BIOMETRIC ATTENDANCE STSTEM',
    description: "The system works on face recognition where each student / employee is photographed. The teacher/supervisior can then record the attendance. Built with Python using OpenCV and Facial Recognition libraries",
    image: '/images/FRAS.jpg',
    tags: ['Python', 'OpenCV'],
    source: 'https://github.com/1monKEY51/Computer-vision/tree/main/FRAS',
    visit: 'https://github.com/1monKEY51/Computer-vision/tree/main/FRAS',
    id: 2,
  },
  {
    title: 'OBJECT DETECTION SOFTWARE',
    description: "Object detection Computer Vision technique that identifies and locates objects on a video. Object detection can be used to count objects in a scene, determine and track their precise locations, and accurately label them using this type of identification and localization. Built with Python using OpenCV",
    image: '/images/Object.jpg',    
    tags: ['Python', 'OpenCV'],
    source: 'https://github.com/1monKEY51/Computer-vision/tree/main/Object-detection',
    visit: 'https://github.com/1monKEY51/Computer-vision/tree/main/Object-detection',
    id: 3,
  },
  {
    title: 'SMART CONTRACTS, TOKENS AND DAOs',
    description: "Solidity was used to program Smart Contracts and crypto-tokens. developed decentralized voting systems and decentralized autonomous organizations.",
    image: '/images/ETH.jpg',
    tags: ['Solidity'],
    source: 'https://github.com/1monKEY51/Web3',
    visit: 'https://github.com/1monKEY51/Web3',
    id: 4,
  },
  {
    title: 'CI / CD WITH GUTHUB ACTIONS',
    description: "GitHub Actions makes it simple to automate all of your software workflows, and it now includes world-class CI/CD. You can build, test, and deploy your code directly from GitHub. Integrated testing tools, SCAs & sSAST ",
    image: 'images/GIT.jpg',
    tags: ['Github Actions', 'CI/CD','YAML'],
    source: 'https://github.com/1monKEY51/CI-CD-with-Github-actions',
    visit: 'https://github.com/1monKEY51/CI-CD-with-Github-actions',
    id: 5,
  },
  {
    title: 'NETWORK AUTOMATION',
    description: "Python is widely used for performing network automation and has several modules that allow you to connect to network devices and execute commands and scripts that allow us to run automated recon. AutomationScript.py configures a Cisco network with VLANs, DHCP, HSRP, STP, and OSPF between the layers of the network",
    image: '/images/CISCO.jpg',    
    tags: ['Cisco','Python', 'Bash'],
    source: 'https://github.com/1monKEY51/Network-Automation',
    visit: 'https://github.com/1monKEY51/Network-Automation',
    id: 6,
  },
  {
    title: 'SIMPLE NEURAL NETWORK',
    description: "This simple neural network is designed to predict one outcome from three different input values using mathematical equations and the naturally occurring physiological model of inputs and outputs through a neuron via synapses.",
    image: '/images/NN.jpg',
    tags: ['Python', 'Numpy'],
    source: 'https://github.com/1monKEY51/Neural-Network',
    visit: 'https://github.com/1monKEY51/Neural-Network',
    id: 7,
  },
];

export const TimeLineData = [
  { year: 2016, text: 'Studied Mecha-tronics Engineering', },
  { year: 2016, text: 'Apprentinceship at EMS technic', },
  { year: 2017, text: 'Studied Computer Systems Engineering at CUT', },
  { year: 2018, text: 'Started as a IT freelancer while still at CUT', },
  { year: 2019, text: 'Studied IT Systems Administartor at CTU', },
  { year: 2020, text: 'Studied Cloud & Cybersecurity Professional at CTU', },
  { year: 2020, text: 'Part-time Computer Vision Researcher internship at KFT', },
  { year: 2021, text: 'Dual-position: Cyber Security Engineer & Backend developer at Bettr', },
];